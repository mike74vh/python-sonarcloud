name: sonarcloud

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # - name: Install Sonar scanner for .NET
      #   run: |
      #     cd /tmp || exit
      #     mkdir sonar
      #     wget -q https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/6.0.0.81631/sonar-scanner-6.0.0.81631-net.zip
      #     echo "Download completed."
      #     echo "Unziping downloaded file..."
      #     unzip sonar-scanner-6.0.0.81631-net.zip -d sonar
      #     echo "Unzipping completed."
      #     echo "============================"
      #     echo "Listing files in /tmp/sonar..."
      #     ls -ll /tmp/sonar
      #     echo "============================"
      #     rm sonar-scanner-6.0.0.81631-net.zip
      #     sudo mv sonar/* /var/opt
      #     echo "============================"
      #     echo "Listing files in /var/opt..."
      #     ls -ll /var/opt
      #     echo "============================"
      #     sudo chmod +x /var/opt/sonar-scanner-5.0.1.3006/bin/sonar-scanner
      #     echo "Creating links..."
      #     sudo ln -s /var/opt/sonar-scanner-5.0.1.3006/bin/sonar-scanner /usr/local/bin/

      #     ls -ll /usr/local/bin

      #     echo "Path to sonar-scanner:"
      #     which sonar-scanner
      - name: Install Sonar scanner
        run: |
          cd /tmp || exit
          wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          echo "Download completed."
          echo "Unziping downloaded file..."
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          echo "Unzipping completed."
          rm sonar-scanner-cli-5.0.1.3006-linux.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /var/opt
          echo "Creating links..."
          sudo ln -s /var/opt/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner /usr/local/bin/

          echo "Path to sonar-scanner:"
          which sonar-scanner

      # - name: Install code coverage tool
      #   run: |
      #     dotnet tool install --global dotnet-coverage
      #     mkdir __reports
      # - name: Build and analyze for .NET
      #   run: |
      #     dotnet /var/opt/SonarScanner.MSBuild.dll begin /k:"mike74vh_sonarcloud" /o:"mike74vh" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /s:"${{ github.workspace }}/SonarQube.Analysis.xml" /d:sonar.cs.vscoveragexml.reportsPaths=${{ github.workspace }}/__reports/coverage.xml
      #     dotnet build -c Release --no-incremental
      #     dotnet-coverage collect "dotnet test" -f xml -o "${{ github.workspace }}/__reports/coverage.xml"
      #     dotnet /var/opt/SonarScanner.MSBuild.dll end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      #   working-directory: src

      # dotnet test -c Release --results-directory __reports --logger:"junit;LogFileName={assembly}.unittests.junit.xml" --verbosity normal --collect:"XPlat Code Coverage;Format=cobertura"

      - name: Build and analyze
        run: |
          make ci_tests
          sonar-scanner --define sonar.host.url="https://sonarcloud.io" --define sonar.token="${{ secrets.SONAR_TOKEN }}"

# - name: Install SonarCloud scanner
#   run: dotnet tool install --global dotnet-sonarscanner --version 6.0.0
# - name: Build and analyze
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#   run: |
#     dotnet sonarscanner begin /k:"mike74vh_sonarcloud" /o:"mike74vh" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:project.settings="${{ github.workspace }}/src/sonar-project.properties"
#     dotnet build -c Release
#     dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

#     echo ">>>>>>>>>>>>>>>>>>>>>>>"
#     cat ${{ github.workspace }}/src/.sonarqube/out/sonar-project.properties
#     echo ">>>>>>>>>>>>>>>>>>>>>>>"
#   working-directory: src
